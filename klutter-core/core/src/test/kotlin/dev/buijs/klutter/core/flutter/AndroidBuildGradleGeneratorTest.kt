package dev.buijs.klutter.core.flutter

import dev.buijs.klutter.core.Root
import io.kotlintest.shouldBe
import io.kotlintest.shouldNotBe
import io.kotlintest.specs.WordSpec
import java.nio.file.Files
import kotlin.io.path.createDirectories

/**
 * @author Gillian Buijs
 * @author https://buijs.dev
 */
class AndroidBuildGradleGeneratorTest: WordSpec({

    "Using the AndroidBuildGradleGenerator" should {
        "create a valid and fully configured android build.gradle file" {
            val projectDir = Files.createTempDirectory("")
            projectDir.createDirectories()

            val androidAppDir = projectDir.resolve("flutter/android/app").toAbsolutePath()
            androidAppDir.createDirectories()

            val flutterDir = projectDir.resolve("flutter/lib").toAbsolutePath()
            flutterDir.createDirectories()

            val klutterDir = projectDir.resolve(".klutter").toAbsolutePath().toFile()
            klutterDir.mkdirs()

            val properties = klutterDir.resolve("klutter.properties")
            properties.createNewFile()
            properties.writeText("""
                |kotlin.version=1.6.0
                |android.sdk.compile=31
                |android.sdk.minimum=21
                |android.sdk.target=31
                |app.version.name=1.0.1
                |app.id=dev.buijs.klutter.example
                |app.version.code=2
                |gradle.version=7.0.4
                |flutter.sdk.location="Users/Foo/Bar/flutter/bin"
                |klutter.annotations.kmp.version=0.2.49
            """.trimMargin())

            val sut = AndroidBuildGradleGenerator(Root(projectDir.toFile()), androidAppDir.toFile())
            val logging = sut.generate()

            logging.messages().size shouldNotBe 0

            val generatedGradleFile = androidAppDir.resolve("build.gradle").toFile()
            generatedGradleFile.exists() shouldBe true

            generatedGradleFile.readText().filter { !it.isWhitespace() }  shouldBe """
                    // Autogenerated by Klutter
                    // Do not edit directly
                    // Do not check into VCS
                    // See also: https://buijs.dev/klutter
                    
                    apply plugin: 'com.android.application'
                    apply plugin: 'kotlin-android'
                    apply from: "Users/Foo/Bar/flutter/bin/packages/flutter_tools/gradle/flutter.gradle"
                    
                    def keystoreProperties = new Properties()
                    def keystorePropertiesFile = rootProject.file('key.properties')
                    if (keystorePropertiesFile.exists()) {
                        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
                    }
                    
                    if (!file("../../../.klutter/kmp.aar").exists()) {
                        throw new GradleException("File '../../../.klutter/kmp.aar' does not exist. Please build kmp module first.")
                    }
                    
                    android {
                        compileSdkVersion 31
                    
                        compileOptions {
                            sourceCompatibility JavaVersion.VERSION_1_8
                            targetCompatibility JavaVersion.VERSION_1_8
                        }
                    
                        kotlinOptions {
                            jvmTarget = '1.8'
                        }
                    
                        sourceSets {
                            main.java.srcDirs += 'src/main/kotlin'
                        }
                    
                        defaultConfig {
                            targetSdkVersion 31
                            applicationId "dev.buijs.klutter.example"
                            minSdkVersion 21
                            versionCode 2
                            versionName "1.0.1"
                        }
                    
                        signingConfigs {
                            release {
                                keyAlias keystoreProperties['keyAlias']
                                keyPassword keystoreProperties['keyPassword']
                                storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
                                storePassword keystoreProperties['storePassword']
                            }
                        }
                    
                        buildTypes {
                            release {
                                signingConfig signingConfigs.release
                                shrinkResources false
                                minifyEnabled false
                            }
                        }
                    }
                    
                    flutter {
                        source '../..'
                    }
                    
                    dependencies {
                        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.6.0"
                        implementation 'dev.buijs.klutter:annotations-kmp-android:0.2.49'
                        implementation files('../../../.klutter/kmp.aar')
                    }

       
                """.filter { !it.isWhitespace() }
        }
    }
})

