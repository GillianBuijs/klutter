package dev.buijs.klutter.core.tasks.adapter.flutter

import dev.buijs.klutter.core.Android
import dev.buijs.klutter.core.Root
import io.kotlintest.shouldBe
import io.kotlintest.specs.WordSpec
import java.nio.file.Files
import kotlin.io.path.createDirectories

/**
 * @author Gillian Buijs
 */
class AndroidRootBuildGradleGeneratorTest: WordSpec({

    val dollar = "$"

    "Using the AndroidBuildGradleGenerator" should {
        "create a valid and fully configured android build.gradle file" {
            val projectDir = Files.createTempDirectory("")
            projectDir.createDirectories()

            val androidAppDir = projectDir.resolve("flutter/android/app").toAbsolutePath()
            androidAppDir.createDirectories()

            val flutterDir = projectDir.resolve("flutter/lib").toAbsolutePath()
            flutterDir.createDirectories()

            val klutterDir = projectDir.resolve(".klutter").toAbsolutePath().toFile()
            klutterDir.mkdirs()

            val root = Root(projectDir.toFile())
            val sut = AndroidRootBuildGradleGenerator(
                Android(androidAppDir.toFile(), root)
            )

            sut.generate()

            val generatedGradleFile = androidAppDir.resolve("build.gradle").toFile()
            generatedGradleFile.exists() shouldBe true

            generatedGradleFile.readText().filter{ !it.isWhitespace() }   shouldBe """
                // Autogenerated by Klutter
                // Do not edit directly
                // See: https://buijs.dev/klutter
                buildscript {
                
                   def klutterGradleFile = new File("$dollar{projectDir}/../klutter.gradle")
                   if (!klutterGradleFile.exists()) {
                       throw new GradleException("File not found ${dollar}klutterGradleFile")
                   }
                
                   apply from: "${dollar}klutterGradleFile"
                
                   repositories {
                       google()
                       mavenCentral()
                       maven { url = uri("https://repsy.io/mvn/buijs-dev/klutter") }
                   }
                
                
                   dependencies {
                       classpath "com.android.tools.build:gradle:$dollar{project.ext["androidGradleVersion"]}"
                       classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$dollar{project.ext["kotlinVersion"]}"
                       classpath "dev.buijs.klutter:core:$dollar{project.ext["klutterVersion"]}"
                   }
                    
                }
                
                allprojects {
                    repositories {
                        google()
                        mavenCentral()
                        maven { url = uri("https://repsy.io/mvn/buijs-dev/klutter") }
                    }
                }
                
                rootProject.buildDir = '../build'
                subprojects {
                    project.buildDir = "$dollar{rootProject.buildDir}/$dollar{project.name}"
                }
                
                subprojects {
                    project.evaluationDependsOn(':app')
                }
                
                task clean(type: Delete) {
                    delete rootProject.buildDir
                }
                """.filter { !it.isWhitespace() }
        }

    }
})

