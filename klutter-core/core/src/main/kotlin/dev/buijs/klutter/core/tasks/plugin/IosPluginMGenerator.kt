package dev.buijs.klutter.core.tasks.plugin

import dev.buijs.klutter.core.*
import dev.buijs.klutter.core.KlutterPrinter
import dev.buijs.klutter.core.tasks.shared.DefaultWriter
import java.io.File

/**
 * @author Gillian Buijs
 */
internal class IosPluginMGenerator(
    private val path: File,
    private val pluginClassName: String,
    private val libraryName: String,
): KlutterFileGenerator() {

    override fun printer() = IosPluginMPrinter(pluginClassName, libraryName)

    override fun writer() = DefaultWriter(path, printer().print())

}

internal class IosPluginMPrinter(
    private val pluginClassName: String,
    private val libraryName: String,
): KlutterPrinter {

    override fun print() = """
            |# Generated by Klutter framework.
            |#import "$pluginClassName.h"
            |#if __has_include(<$libraryName/$libraryName-Swift.h>)
            |#import <$libraryName/$libraryName-Swift.h>
            |#else
            |// Support project import fallback if the generated compatibility header
            |// is not copied when this plugin is created as a library.
            |// https://forums.swift.org/t/swift-static-libraries-dont-copy-generated-objective-c-header/19816
            |#import "$libraryName-Swift.h"
            |#endif
            |
            |@implementation $pluginClassName
            |+ (void)registerWithRegistrar:(NSObject<FlutterPluginRegistrar>*)registrar {
            |  [Swift$pluginClassName registerWithRegistrar:registrar];
            |}
            |@end
            |""".trimMargin()

}